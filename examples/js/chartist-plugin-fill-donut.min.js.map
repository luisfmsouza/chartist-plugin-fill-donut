{"version":3,"sources":["chartist-plugin-fill-donut.js"],"names":["root","factory","define","amd","exports","module","require","Chartist","this","window","document","defaultOptions","fillClass","label","html","class","items","plugins","fillDonut","options","extend","chart","Pie","$chart","container","style","position","$svg","drawDonut","data","type","index","querySelector","$clone","group","_node","cloneNode","split","forEach","className","setAttribute","getAttribute","call","querySelectorAll","el","node","parentNode","removeChild","removeAttribute","insertBefore","childNodes","on","itemIndex","fillDonutOptions","thisItem","$wrapper","createElement","classList","add","item","id","content","offsetY","offsetX","length","insertAdjacentHTML","appendChild","cWidth","Math","ceil","offsetWidth","cHeight","clientHeight","wWidth","wHeight","bottom","left","top","right","center","Object","assign"],"mappings":"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","file":"chartist-plugin-fill-donut.min.js","sourcesContent":[";(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(['chartist'], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory(require('chartist'));\n  } else {\n    root['Chartist.plugins.fillDonut'] = factory(root.Chartist);\n  }\n}(this, function(Chartist) {\n/**\r\n * Chartist.js plugin to pre fill donuts with animations\r\n * author: moxx\r\n * author-url: https://github.com/moxx/chartist-plugin-fill-donut\r\n *\r\n */\r\n(function(window, document, Chartist) {\r\n    'use strict';\r\n\r\n    var defaultOptions = {\r\n        fillClass: 'ct-fill-donut',\r\n        label: {\r\n            html: 'div',\r\n            class: 'ct-fill-donut-label'\r\n        },\r\n        items: [{}]\r\n    };\r\n\r\n    Chartist.plugins = Chartist.plugins || {};\r\n    Chartist.plugins.fillDonut = function(options) {\r\n        options = Chartist.extend({}, defaultOptions, options);\r\n        return function fillDonut(chart){\r\n            if(chart instanceof Chartist.Pie) {\r\n                var $chart = chart.container;\r\n                $chart.style.position = 'relative';\r\n                var $svg;\r\n\r\n                var drawDonut = function(data){\r\n                    if(data.type == 'slice'){\r\n                        if(data.index == 0)\r\n                            $svg = $chart.querySelector('svg');\r\n\r\n                        var $clone = data.group._node.cloneNode(true);\r\n                        options.fillClass.split(\" \").forEach(function(className) {\r\n                            $clone.setAttribute('class', $clone.getAttribute('class') + ' ' + className);\r\n                        });\r\n\r\n                        [].forEach.call($clone.querySelectorAll('path'), function(el){\r\n                            [].forEach.call(el.querySelectorAll('animate'), function(node) {\r\n                                node.parentNode.removeChild(node);\r\n                            });\r\n\r\n                            el.removeAttribute('stroke-dashoffset');\r\n                        });\r\n\r\n                        $svg.insertBefore($clone, $svg.childNodes[0]);\r\n\r\n                    }\r\n                }\r\n\r\n                chart.on('draw', function(data) {\r\n                    drawDonut(data);\r\n                });\r\n\r\n                chart.on('created', function(data){\r\n                    var itemIndex = 0;\r\n\r\n                    if(chart.options.fillDonutOptions){\r\n                        options = Chartist.extend({}, options, chart.options.fillDonutOptions);\r\n                        drawDonut(data);\r\n                    }\r\n\r\n                    [].forEach.call(options.items, function(thisItem){\r\n                        var $wrapper = document.createElement(options.label.html);\r\n                        options.label.class.split(\" \").forEach(function(className) {\r\n                            if ($wrapper.classList)\r\n                                $wrapper.classList.add(className);\r\n                            else\r\n                                $wrapper.className += ' ' + className;\r\n                        });\r\n                        var item = Chartist.extend({}, {\r\n                            class: '',\r\n                            id: '',\r\n                            content: 'fillText',\r\n                            position: 'center', //bottom, top, left, right\r\n                            offsetY: 0, //top, bottom in px\r\n                            offsetX: 0 //left, right in px\r\n                        }, thisItem);\r\n\r\n                        var content = item.content;\r\n\r\n                        if(item.id.length > 0)\r\n                            $wrapper.setAttribute('id', item.id);\r\n                        if(item.class.length > 0)\r\n                            $wrapper.setAttribute('class', item.class);\r\n\r\n                        [].forEach.call($chart.querySelectorAll('*[data-fill-index$=\"fdid-'+itemIndex+'\"]'), function(node){\r\n                            node.parentNode.removeChild(node);\r\n                        });\r\n                        $wrapper.setAttribute('data-fill-index','fdid-'+itemIndex);\r\n                        itemIndex++;\r\n\r\n                        $wrapper.insertAdjacentHTML('beforeend', item.content);\r\n                        $wrapper.style.position = 'absolute';\r\n                        $chart.appendChild($wrapper);\r\n\r\n                        var cWidth = Math.ceil($chart.offsetWidth / 2);\r\n                        var cHeight = Math.ceil($chart.clientHeight / 2);\r\n                        var wWidth = Math.ceil($wrapper.offsetWidth / 2);\r\n                        var wHeight = Math.ceil($wrapper.clientHeight / 2);\r\n\r\n                        var style = {\r\n                            bottom: {\r\n                                bottom: 0 + item.offsetY + \"px\",\r\n                                left: (cWidth - wWidth) + item.offsetX + \"px\",\r\n                            },\r\n                            top: {\r\n                                top: 0  + item.offsetY + \"px\",\r\n                                left: (cWidth - wWidth) + item.offsetX + \"px\",\r\n                            },\r\n                            left: {\r\n                                top: (cHeight - wHeight) + item.offsetY + \"px\",\r\n                                left: 0 + item.offsetX + \"px\",\r\n                            },\r\n                            right: {\r\n                                top: (cHeight - wHeight) + item.offsetY + \"px\",\r\n                                right: 0 + item.offsetX + \"px\",\r\n                            },\r\n                            center: {\r\n                                top: (cHeight - wHeight) + item.offsetY + \"px\",\r\n                                left: (cWidth - wWidth) + item.offsetX + \"px\",\r\n                            }\r\n                        };\r\n\r\n                        Object.assign($wrapper.style, style[item.position]);\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n}(window, document, Chartist));\r\n\nreturn Chartist.plugins.fillDonut;\n}));\n"]}