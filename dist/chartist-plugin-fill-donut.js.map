{"version":3,"names":[],"mappings":"","sources":["chartist-plugin-fill-donut.js"],"sourcesContent":["/**\n * Chartist.js plugin to pre fill donuts with animations\n * author: moxx\n * author-url: https://github.com/moxx/chartist-plugin-fill-donut\n *\n */\n(function (document, Chartist) {\n    'use strict';\n\n    var defaultOptions = {\n        fillClass: 'ct-fill-donut',\n        label: {\n            html: 'div',\n            class: 'ct-fill-donut-label'\n        },\n        items: [{}]\n    };\n\n    Chartist.plugins = Chartist.plugins || {};\n    Chartist.plugins.fillDonut = function (options) {\n        options = Chartist.extend({}, defaultOptions, options);\n        return function fillDonut(chart) {\n            if (chart instanceof Chartist.Pie) {\n                var $chart = chart.container;\n                $chart.style.position = 'relative';\n                var $svg;\n\n                var drawDonut = function(data) {\n                    if (data.type === 'slice') {\n                        if (data.index === 0) {\n                            $svg = $chart.querySelector('svg');\n                        }\n\n                        var $clone = data.group._node.cloneNode(true);\n                        options.fillClass.split(\" \").forEach(function (className) {\n                            $clone.setAttribute('class', $clone.getAttribute('class') + ' ' + className);\n                        });\n\n                        [].forEach.call($clone.querySelectorAll('path'), function (el) {\n                            [].forEach.call(el.querySelectorAll('animate'), function (node) {\n                                node.parentNode.removeChild(node);\n                            });\n\n                            el.removeAttribute('stroke-dashoffset');\n                        });\n\n                        $svg.insertBefore($clone, $svg.childNodes[0]);\n\n                    }\n                };\n\n                chart.on('draw', function (data) {\n                    drawDonut(data);\n                });\n\n                chart.on('created', function (data) {\n                    var itemIndex = 0;\n\n                    if (chart.options.fillDonutOptions) {\n                        options = Chartist.extend({}, options, chart.options.fillDonutOptions);\n                        drawDonut(data);\n                    }\n\n                    [].forEach.call(options.items, function (thisItem) {\n                        var $wrapper = document.createElement(options.label.html);\n                        options.label.class.split(\" \").forEach(function (className) {\n                            if ($wrapper.classList) {\n                                $wrapper.classList.add(className);\n                            } else {\n                                $wrapper.className += ' ' + className;\n                            }\n                        });\n                        var item = Chartist.extend({}, {\n                            class: '',\n                            id: '',\n                            content: 'fillText',\n                            position: 'center', //bottom, top, left, right\n                            offsetY: 0, //top, bottom in px\n                            offsetX: 0 //left, right in px\n                        }, thisItem);\n\n\n                        if (item.id.length > 0) {\n                            $wrapper.setAttribute('id', item.id);\n                        }\n                        if (item.class.length > 0) {\n                            $wrapper.setAttribute('class', item.class);\n                        }\n\n                        [].forEach.call($chart.querySelectorAll('*[data-fill-index$=\"fdid-' + itemIndex + '\"]'), function (node) {\n                            node.parentNode.removeChild(node);\n                        });\n                        $wrapper.setAttribute('data-fill-index', 'fdid-' + itemIndex);\n                        itemIndex += 1;\n\n                        $wrapper.insertAdjacentHTML('beforeend', item.content);\n                        $wrapper.style.position = 'absolute';\n                        $chart.appendChild($wrapper);\n\n                        var cWidth = Math.ceil($chart.offsetWidth / 2);\n                        var cHeight = Math.ceil($chart.clientHeight / 2);\n                        var wWidth = Math.ceil($wrapper.offsetWidth / 2);\n                        var wHeight = Math.ceil($wrapper.clientHeight / 2);\n\n                        var style = {\n                            bottom: {\n                                bottom: 0 + item.offsetY + \"px\",\n                                left: (cWidth - wWidth) + item.offsetX + \"px\"\n                            },\n                            top: {\n                                top: 0 + item.offsetY + \"px\",\n                                left: (cWidth - wWidth) + item.offsetX + \"px\"\n                            },\n                            left: {\n                                top: (cHeight - wHeight) + item.offsetY + \"px\",\n                                left: 0 + item.offsetX + \"px\"\n                            },\n                            right: {\n                                top: (cHeight - wHeight) + item.offsetY + \"px\",\n                                right: 0 + item.offsetX + \"px\"\n                            },\n                            center: {\n                                top: (cHeight - wHeight) + item.offsetY + \"px\",\n                                left: (cWidth - wWidth) + item.offsetX + \"px\"\n                            }\n                        };\n\n                        Chartist.extend($wrapper.style, style[item.position]);\n                    });\n                });\n            }\n        };\n    };\n}(document, Chartist)); // jshint ignore:line\n"],"file":"chartist-plugin-fill-donut.js"}